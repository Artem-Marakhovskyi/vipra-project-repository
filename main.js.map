{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/about-company/about-company.component.css","webpack:///./src/about-company/about-company.component.html","webpack:///./src/about-company/about-company.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/common/entities/about-company.ts","webpack:///./src/common/errors/argument-error.ts","webpack:///./src/common/errors/error-reason.ts","webpack:///./src/common/infrastructure/contentful-values.ts","webpack:///./src/common/infrastructure/modal-service.ts","webpack:///./src/common/infrastructure/modals/modal.component.html","webpack:///./src/common/infrastructure/modals/modal.component.scss","webpack:///./src/common/infrastructure/modals/modal.component.ts","webpack:///./src/common/mappingLayer/mapper.ts","webpack:///./src/common/services/contentful-service.ts","webpack:///./src/components/common/footer/footer.component.css","webpack:///./src/components/common/footer/footer.component.html","webpack:///./src/components/common/footer/footer.component.ts","webpack:///./src/components/common/header/header.component.css","webpack:///./src/components/common/header/header.component.html","webpack:///./src/components/common/header/header.component.ts","webpack:///./src/components/common/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1>{{title}}</h1>\\r\\n<div class=\\\"row\\\">\\r\\n        <img [src]=\\\"fullImagePath\\\">\\r\\n</div>\\r\\n<p class=\\\"pure-u-1-3\\\">{{content}}</p>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { OnInit } from '@angular/core/src/metadata/lifecycle_hooks';\r\nimport { ContentfulService } from '../common/services/contentful-service';\r\nimport { AboutCompany } from '../common/entities/about-company';\r\nimport { mapAboutCompany } from '../common/mappingLayer/mapper';\r\nimport { ModalService } from '../common/infrastructure/modal-service';\r\n\r\n@Component({\r\n  selector: 'about-company',\r\n  templateUrl: './about-company.component.html',\r\n  styleUrls: ['./about-company.component.css']\r\n})\r\nexport class AboutCompanyComponent implements OnInit{\r\n  \r\n  title : string;\r\n  content : string;\r\n  fullImagePath = '/assets/dog.jpg';\r\n\r\n  public constructor(\r\n    private _contentfulService : ContentfulService,\r\n    private _modalService : ModalService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    var entries = this._contentfulService.ofContentType<AboutCompany>(\r\n      AboutCompany.CONTENT_TYPE_ID,\r\n      AboutCompany.ORDER_FIELD,\r\n      mapAboutCompany\r\n    ).then(\r\n      (data) => {      \r\n        this.title = data[0].title;\r\n        this.content = data[0].about;\r\n      });\r\n  }\r\n  \r\n}\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{title}}!\\r\\n  </h1>\\r\\n  \\r\\n  <about-company></about-company>\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ContentfulService } from '../common/services/contentful-service';\r\nimport { ErrorReason } from '../common/errors/error-reason';\r\nimport { ContentfulValues } from '../common/infrastructure/contentful-values';\r\nimport { AboutCompanyComponent } from '../about-company/about-company.component';\r\nimport { ModalService } from '../common/infrastructure/modal-service';\r\nimport { ModalComponent } from '../common/infrastructure/modals/modal.component';\r\nimport { SharedModule } from '../components/common/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AboutCompanyComponent,\r\n    ModalComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    SharedModule.forRoot()\r\n  ],\r\n  providers: [\r\n    ContentfulValues,\r\n    ErrorReason,\r\n    ContentfulService,\r\n    ModalService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export class AboutCompany {\r\n    \r\n    public static readonly CONTENT_TYPE_ID = 'about_company';\r\n    public static readonly ORDER_FIELD = '';\r\n\r\n    public constructor(\r\n        public title : string,\r\n        public about : string\r\n    ) { }\r\n}","import { ErrorReason } from './error-reason';\r\n\r\nexport class ArgumentError extends Error {\r\n\r\n    constructor(\r\n        public reason : string, \r\n        public argumentName? : string) {\r\n            super();\r\n            this.message = this.toString();\r\n        }\r\n\r\n    public toString(){\r\n        var result = '';\r\n        if (this.argumentName){\r\n            result = 'Argument name: ' + this.argumentName + ', ';\r\n        }\r\n\r\n        result += 'Reason: ' + this.reason;\r\n\r\n        return result;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class ErrorReason  {\r\n    OutOfRange = 'Out of range';\r\n    Null = 'Null';\r\n    TooSmall =  'Argument is to small';\r\n    Inconsistency =  'Inconsistency';\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\n[Injectable]\r\nexport class ContentfulValues {\r\n    public readonly API_KEY_NAME = \"VipraContentfulAPIKey\";\r\n    public readonly SPACE_ID = \"odwss3fdjzqe\";\r\n    public readonly ACCESS_TOKEN = \"b9ac8d8f6d9bba6ab9f97aefaefa35d3fa578be4c0d0f321bf0e660361befb68\";\r\n}","import { Injectable } from '@angular/core';\r\n\r\nimport { ModalComponent } from './modals/modal.component';\r\n\r\n\r\n/**\r\n* ModalService - Service used to interact with the Modal Component\r\n*/\r\n@Injectable()\r\nexport class ModalService {\r\n  private modals: Array<ModalComponent>;\r\n\r\n  constructor() {\r\n    this.modals = [];\r\n  }\r\n\r\n  /**\r\n  * close - Closes the selected modal by searching for the component and setting\r\n  * isOpen to false\r\n  * Note: If a modal is set to be 'blocking' a user click outside of the modal will\r\n  * not dismiss the modal, this is off my default\r\n  * @param { String } modalId The id of the modal to close\r\n  */\r\n  close(modalId: string, checkBlocking = false): void {\r\n    let modal = this.findModal(modalId);\r\n\r\n    if (modal) {\r\n      if (checkBlocking && modal.blocking) {\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        modal.isOpen = false;\r\n      }, 250);\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n  * findModal - Locates the specified modal in the modals array\r\n  * @param { String } modalId The id of the modal to find\r\n  */\r\n  findModal(modalId: string): ModalComponent {\r\n    for (let modal of this.modals) {\r\n\r\n      if (modal.modalId === modalId) {\r\n        return modal;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n  * open - Opens the specified modal based on the suplied modal id\r\n  * @param { String } modalId The id of the modal to open\r\n  */\r\n  open(modalId: string): void {\r\n    let modal = this.findModal(modalId);\r\n\r\n    if (modal) {\r\n      setTimeout(() => {\r\n        modal.isOpen = true;\r\n      }, 250);\r\n    }\r\n  }\r\n\r\n  /**\r\n  * registerModal - Registers all modal components being used on initialization\r\n  * @param { Object } newModal The new modal to add to the array of available modals\r\n  */\r\n  registerModal(newModal: ModalComponent): void {\r\n    let modal = this.findModal(newModal.modalId);\r\n\r\n    // Delete existing to replace the modal\r\n    if (modal) {\r\n      this.modals.splice(this.modals.indexOf(modal), 1);\r\n    }\r\n\r\n    this.modals.push(newModal);\r\n\r\n  }\r\n\r\n}","module.exports = \"<div class=\\\"modal-container\\\" *ngIf=\\\"isOpen\\\">\\r\\n    <div class=\\\"modal-overlay\\\" (click)=\\\"close(true)\\\"></div>\\r\\n      <div class=\\\"app-modal\\\">\\r\\n      <div class=\\\"title\\\">\\r\\n      <h3 *ngIf=\\\"modalTitle\\\" [innerHTML]=\\\"modalTitle\\\"></h3>\\r\\n      <button *ngIf=\\\"!blocking && closebtn\\\"\\r\\n          class=\\\"btn-close\\\" (click)=\\\"close()\\\">X</button>\\r\\n    </div>\\r\\n    <div class=\\\"body\\\">\\r\\n      <ng-content></ng-content>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","module.exports = \".modal-container .modal-overlay {\\n  background: rgba(169, 169, 169, 0.65);\\n  bottom: 0;\\n  left: 0;\\n  position: fixed;\\n  right: 0;\\n  top: 0;\\n  z-index: 1100; }\\n\\n.modal-container .app-modal {\\n  background: white;\\n  border-radius: 3px;\\n  left: calc(50% - 250px);\\n  padding: 0;\\n  max-height: calc(100% - 100px);\\n  overflow-y: auto;\\n  position: fixed;\\n  top: 50px;\\n  width: 500px;\\n  z-index: 1101; }\\n\\n.modal-container .app-modal .title {\\n    height: 30px; }\\n\\n.modal-container .app-modal .title h3 {\\n      display: inline-block;\\n      margin-top: 0 !important; }\\n\\n.modal-container .app-modal .title .btn-close {\\n      background: lightgray;\\n      border: 0;\\n      border-radius: 50%;\\n      float: right;\\n      height: 25px;\\n      width: 25px; }\\n\"","import { Component, HostListener, Input, OnInit } from '@angular/core';\r\nimport { ModalService } from '../modal-service';\r\n\r\n\r\n/**\r\n * ModalComponent - This class represents the modal component.\r\n * @requires Component\r\n */\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  styleUrls: ['modal.component.scss'],\r\n  templateUrl: 'modal.component.html'\r\n})\r\n\r\nexport class ModalComponent implements OnInit {\r\n\r\n  isOpen: boolean = false;\r\n\r\n  @Input() closebtn: boolean;\r\n  @Input() modalId: string;\r\n  @Input() modalTitle: string;\r\n  @Input() blocking: boolean;\r\n  @HostListener('document:keyup', ['$event'])\r\n  /**\r\n  * keyup - Checks keys entered for the 'esc' key, attached to hostlistener\r\n  */\r\n  keyup(event: KeyboardEvent): void {\r\n    if (event.keyCode === 27) {\r\n      this.modalService.close(this.modalId, true);\r\n    }\r\n  }\r\n\r\n  constructor(private modalService: ModalService) { }\r\n\r\n  /**\r\n  * ngOnInit - Initiated when component loads\r\n  */\r\n  ngOnInit() {\r\n    this.modalService.registerModal(this);\r\n  }\r\n\r\n  /**\r\n  * close - Closes the selected modal\r\n  */\r\n  close(checkBlocking = false): void {\r\n    this.modalService.close(this.modalId, checkBlocking);\r\n  }\r\n\r\n}\r\n","import { AboutCompany } from \"../entities/about-company\";\r\n\r\nexport function mapAboutCompany(item : any) : AboutCompany {\r\n    return new AboutCompany(\r\n        item.fields.title,\r\n        item.fields.about\r\n    );\r\n}","import { Injectable } from '@angular/core';\r\nimport { ArgumentError } from '../errors/argument-error';\r\nimport { ErrorReason } from '../errors/error-reason';\r\nimport { ContentfulValues } from '../infrastructure/contentful-values';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { createClient, Entry } from 'contentful';\r\n\r\n@Injectable()\r\nexport class ContentfulService {\r\n\r\n    private client : any;\r\n\r\n    public constructor(\r\n        private contentfulValues: ContentfulValues,\r\n        private errorTypes : ErrorReason) {\r\n        this.client = createClient({\r\n            space: contentfulValues.SPACE_ID,\r\n            accessToken: contentfulValues.ACCESS_TOKEN\r\n        });\r\n    }\r\n\r\n    public ofContentType<T>(\r\n        contentTypeId : string,\r\n        orderField : string,\r\n        mappingFunction : (arg : any) => T,\r\n        reverseOrder : boolean = false,\r\n        take : number = 100,\r\n        skip : number = 0)\r\n        : Promise<T[]> {\r\n            if (contentTypeId.length === 0) {\r\n                throw new ArgumentError(this.errorTypes.Inconsistency, \"contentTypeId\");\r\n            }\r\n\r\n            var returnList = [];\r\n\r\n            let paramObj : any = {\r\n                content_type: contentTypeId,\r\n                limit: take,\r\n                skip: skip\r\n            };\r\n\r\n            if (orderField) {\r\n                paramObj.order = reverseOrder ? orderField : '-'+ orderField;\r\n            }\r\n\r\n            return this.client.getEntries(\r\n                paramObj\r\n            ).then(\r\n                    response => response.items.map(mappingFunction)\r\n            ).catch(\r\n                () => \r\n                {\r\n                    throw new Error('Problem with rertieving data');\r\n                });\r\n    }\r\n\r\n    public entry<T>(\r\n        entryId : string,\r\n        mappingFunction : <T>(arg : any) => T\r\n    ) {\r\n        if (entryId.length === 0){\r\n            throw new ArgumentError(this.errorTypes.Inconsistency, \"entryId\");\r\n        }\r\n\r\n        return this.client.getEntry(entryId)\r\n            .then((response) => mappingFunction(response))\r\n            .catch(\r\n                () => \r\n                {\r\n                    throw new Error('Problem with rertieving entry');\r\n                });        \r\n    }\r\n\r\n    public asset(\r\n        assetId : string\r\n    ) : string\r\n    {\r\n        return this.client.getAsset(assetId)\r\n            .then((response) => response.fields.file.url)\r\n            .catch(\r\n                () => \r\n                {\r\n                    throw new Error('Problem with rertieving entry');\r\n                });     \r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <p>\\r\\n    It is a footer\\r\\n  </p>\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'common-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <p>\\r\\n    It is a header\\r\\n  </p>\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'common-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent {\r\n  title = 'app';\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [\r\n        HeaderComponent,\r\n        FooterComponent\r\n    ],\r\n    providers: [],\r\n    exports: [\r\n        HeaderComponent,\r\n        FooterComponent\r\n    ]\r\n})\r\nexport class SharedModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: SharedModule,\r\n            providers: [/* Place for services */]\r\n        };\r\n    }    \r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n  "],"sourceRoot":""}